#	Project Florin Makefile
#	D. Scott Nettleton
#
#	This is the C++ makefile for the Whipstitch Game Engine,
#	codenamed Project Florin.
#	For more information, email:
# 		dsnettleton at whipstitchgames dot com

#     Copyright D. Scott Nettleton, 2013
#     This software is released under the terms of the
#     Lesser GNU Public License (LGPL).

CC=g++
WIN_CC=i586-mingw32msvc-g++
COMPILER_NAME=GNU G++
WIN_COMPILER_NAME=Minimalist GNU Win32 Compiler
REMOVAL_BIN=/bin/rm -f

PROJECT_NAME = Florin
DEBUG_NAME = Florin_dbg
PROFILE_NAME = Florin_profile
WIN_NAME = Florin.exe
INCLUDE_DIRS = -I/usr/include/freetype2
RELEASE_OPTIONS= -O3 -DNDEBUG
DEBUG_OPTIONS= -O0 -g3 -DDEBUG
PROFILE_OPTIONS= -O0 -g3 -DDEBUG -D_PROFILE
WINDOWS_OPTIONS= -I/usr/i586-mingw32msvc/include -I/usr/i586s-mingw32msvc/lib
OPTIONS = -Wall -fmessage-length=0 $(INCLUDE_DIRS)

OBJ_ASSETS = ./wsAssets/wsAnimation.o ./wsAssets/wsAsset.o ./wsAssets/wsFont.o ./wsAssets/wsMesh.o ./wsAssets/wsModel.o ./wsAssets/wsPanel.o ./wsAssets/wsPanelElement.o ./wsAssets/wsText.o
OBJ_AUDIO = ./wsAudio/wsSoundManager.o ./wsAudio/wsSound.o ./wsAudio/wsMusic.o
OBJ_GAME_FLOW = ./wsGameFlow/wsController.o ./wsGameFlow/wsEventManager.o ./wsGameFlow/wsGameLoop.o ./wsGameFlow/wsInputManager.o ./wsGameFlow/wsKeyboardInput.o ./wsGameFlow/wsPointerInput.o ./wsGameFlow/wsThreadPool.o
OBJ_GRAPHICS = ./wsGraphics/wsCamera.o ./wsGraphics/wsRenderSystem.o ./wsGraphics/wsScreen.o ./wsGraphics/wsScreenManager.o ./wsGraphics/wsShader.o
OBJ_UTILS = ./wsUtils/mat4.o ./wsUtils/quat.o ./wsUtils/vec4.o ./wsUtils/wsLog.o ./wsUtils/wsMemoryStack.o ./wsUtils/wsOperations.o ./wsUtils/wsProfileManager.o ./wsUtils/wsTime.o ./wsUtils/wsTransform.o ./wsUtils/wsTrig.o ./wsUtils/wsTypes.o
OBJ_WHIPSTITCH = ws.o
OBJS = $(OBJ_UTILS) $(OBJ_GRAPHICS) $(OBJ_GAME_FLOW) $(OBJ_ASSETS) $(OBJ_WHIPSTITCH) $(OBJ_AUDIO) ./main.o

LIBS = -lfreetype -lgomp -lpthread -lboost_system -lboost_filesystem -lglfw -lGL -lGLEW -lGLU -lSOIL -lalut -lopenal -lvorbisfile
DEFINITIONS = -DWS_DEFAULT_RENDER_MODE=2

#Rules for Building Object Files
%.o: %.cpp %.h
	#  $(COMPILER_NAME) Compiler - Building: $<
	$(CC) -o "$@" -c "$<" $(OPTIONS)
	#  Finished building: $<

main.o: main.cpp ws.h
	#  $(COMPILER_NAME) Compiler - Building: $<
	$(CC) -o "$@" -c "$<" $(OPTIONS)
	#  Finished building: $<

debug: OPTIONS += $(DEBUG_OPTIONS)
debug: PROJECT_NAME = $(DEBUG_NAME)
debug: executable

release: OPTIONS += $(RELEASE_OPTIONS)
release: executable

profile: OPTIONS += $(PROFILE_OPTIONS)
profile: PROJECT_NAME = $(PROFILE_NAME)
profile: executable

# windows: CC = $(WIN_CC)
windows: COMPILER_NAME = $(WIN_COMPILER_NAME)
windows: OPTIONS += -lmingw32
windows: PROJECT_NAME = $(WIN_NAME)
windows: release

executable: $(OBJS)
	#  Building Target: $@
	$(CC) $(OBJS) -o $(PROJECT_NAME) $(OPTIONS) $(LIBS)
	#  Target $@ Built

#	Clean Command
clean:
	#  Cleaning Build
	$(REMOVAL_BIN) $(OBJS) $(PROJECT_NAME) $(DEBUG_NAME) $(PROFILE_NAME) -r
	#  Cleaned
